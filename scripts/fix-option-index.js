const mongoose = require('mongoose');

// Connexion √† MongoDB
mongoose.connect(
  'mongodb+srv://stanislasmakengo1:qAqUnbaBnNq3nDcB@cluster0.mtx2l.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0',
  { useNewUrlParser: true }
)
.then(() => console.log('‚úÖ Connexion √† MongoDB r√©ussie !'))
.catch(() => console.log('‚ùå Connexion √† MongoDB √©chou√©e !'));

async function fixOptionIndexes() {
  try {
    // Attendre que la connexion soit √©tablie
    await new Promise(resolve => setTimeout(resolve, 1000));
    const db = mongoose.connection.db;
    
    console.log('üîç V√©rification des index actuels...');
    
    // Lister tous les index de la collection options
    const indexes = await db.collection('options').indexes();
    console.log('üìã Index actuels:');
    indexes.forEach((index, i) => {
      console.log(`${i + 1}. ${index.name}: ${JSON.stringify(index.key)}`);
    });
    
    console.log('\nüóëÔ∏è Suppression de l\'ancien index companyId_1_code_1...');
    
    // Supprimer l'ancien index
    await db.collection('options').dropIndex('companyId_1_code_1');
    console.log('‚úÖ Ancien index supprim√©!');
    
    console.log('\nüîç V√©rification des index apr√®s suppression...');
    const newIndexes = await db.collection('options').indexes();
    console.log('üìã Nouveaux index:');
    newIndexes.forEach((index, i) => {
      console.log(`${i + 1}. ${index.name}: ${JSON.stringify(index.key)}`);
    });
    
    console.log('\n‚úÖ Correction termin√©e!');
    
  } catch (error) {
    if (error.code === 27) {
      console.log('‚ÑπÔ∏è L\'index n\'existe pas (d√©j√† supprim√© ou n\'a jamais exist√©)');
    } else {
      console.error('‚ùå Erreur:', error.message);
    }
  } finally {
    mongoose.connection.close();
  }
}

fixOptionIndexes();
